version: '3.8'

services:

  wordpress:
    image: wordpress
    restart: always
    ports:
      - "8080:80"
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: exampleuser
      WORDPRESS_DB_PASSWORD: examplepass
      WORDPRESS_DB_NAME: exampledb
    volumes:
      - wordpress:/var/www/html
    networks:
      - wordpress_network
    healthcheck:
      test: curl --fail http://localhost:8080/ || exit 1
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp:logstash:12201"
        tag: "wordpress"

  logstash:
    image: docker.elastic.co/logstash/logstash:8.10.2
    container_name: logstash
    ports:
      - "12201:12201/udp"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "92000:92000"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: exampledb
      MYSQL_USER: exampleuser
      MYSQL_PASSWORD: examplepass
      MYSQL_RANDOM_ROOT_PASSWORD: '1'
    volumes:
      - db:/var/lib/mysql
    networks:
      - wordpress_network
    healthcheck:
      test: curl --fail http://localhost:5000/ || exit 1
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s

volumes:
  wordpress:
    driver: local
  db:
    driver: local

networks:
  wordpress_network:
    driver: bridge
