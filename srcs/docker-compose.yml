services:

  logstash:
    build:
      context: .
      dockerfile: ./requirements/bonus/logstash/Dockerfile
    container_name: logstash
    networks:
      - wordpress_network
    ports:
      - "5044:5044/udp"
    volumes:
      - ls_data:/usr/share/logstash/data
    depends_on:
      - elasticsearch
    healthcheck:
      test: curl --fail http://logstash:9600/_node/stats || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  elasticsearch:
    build:
      context: .
      dockerfile: ./requirements/bonus/elasticsearch/Dockerfile
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "ELASTIC_PASSWORD=adrian2313"
    networks:
      - wordpress_network
    volumes:
      - test_data:/usr/share/elasticsearch/data/

  kibana:
    build:
      context: .
      dockerfile: ./requirements/bonus/kibana/Dockerfile
    image: docker.elastic.co/kibana/kibana:8.10.2
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_SSL_VERIFICATIONMODE=none
    networks:
      - wordpress_network
    depends_on:
      - elasticsearch
    volumes:
      - kb_data:/usr/share/kibana/data

  prometheus:
    build:
      context: .
      dockerfile: ./requirements/bonus/prometheus/Dockerfile
    container_name: prometheus
    networks:
      - metrics_network
    restart: always

  grafana:
    build:
      context: .
      dockerfile: ./requirements/bonus/grafana/Dockerfile
    container_name: grafana
    networks:
      - metrics_network
    volumes:
      - ./requirements/bonus/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin # Cambia esto en producci贸n
    restart: always

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    networks:
      - metrics_network
    restart: always

  wordpress:
    image: wordpress
    container_name: wordpress
    restart: always
    env_file:
      - ./.env
    volumes:
      - /home/login/data:/var/www/html
    networks:
      - wordpress_network
    healthcheck:
      test: curl --fail http://localhost:9000/ || exit 1
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s
    depends_on: # Dependencias de wordpress
      - logstash
      - db
    logging: # Configuraci贸n de logs
      driver: "gelf"
      options:
        gelf-address: "udp://127.0.0.1:5044"

  nginx:
    build:
      context: .
      dockerfile: ./requirements/nginx/Dockerfile
    container_name: nginx
    restart: always
    ports:
      - "443:443"
    volumes:
      - /home/lohin/data:/var/www/html
    depends_on:
      - wordpress
      - kibana
      - grafana
      - elasticsearch
      - prometheus
    networks:
      - wordpress_network
      - metrics_network
    logging: # Configuraci贸n de logs
      driver: "gelf"
      options:
        gelf-address: "udp://127.0.0.1:5044"

  db:
    image: mysql:8.0
    restart: always
    container_name: mariadb
    env_file:
      - ./.env
    volumes:
      - /home/login/data:/var/lib/mysql # Verificar la direccion /home/
    networks:
      - wordpress_network
    healthcheck:
      test: curl --fail http://localhost:5000/ || exit 1
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s
    logging: # Configuraci贸n de logs
      driver: "gelf"
      options:
        gelf-address: "udp://127.0.0.1:5044"

volumes:
  test_data:
  ls_data:
  kb_data:

networks:
  wordpress_network:
    driver: bridge
  metrics_network:
    driver: bridge

